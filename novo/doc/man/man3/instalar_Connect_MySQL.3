.TH "instalar.Connect_MySQL" 3 "Terça, 24 de Dezembro de 2013" "Version 2" "Controle de Acesso" \" -*- nroff -*-
.ad l
.nh
.SH NAME
instalar.Connect_MySQL \- 
.PP
Classe de conexão e acesso ao banco de dados\&.  

.SH SYNOPSIS
.br
.PP
.SS "Membros públicos"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.RI "\fIInicializa o banco de dados\&. \fP"
.ti -1c
.RI "def \fBconecta\fP"
.br
.ti -1c
.RI "def \fBdropar_Tabelas\fP"
.br
.RI "\fIDeleta todas as tabelas se existirem\&. \fP"
.ti -1c
.RI "def \fBcriar_Tabelas\fP"
.br
.RI "\fICria as tabelas do programa na instalação\&. \fP"
.ti -1c
.RI "def \fBcriar_Configuracoes\fP"
.br
.RI "\fICria as configurações do programa\&. \fP"
.in -1c
.SS "Atributos Públicos"

.in +1c
.ti -1c
.RI "\fBhost\fP"
.br
.ti -1c
.RI "\fBuser\fP"
.br
.ti -1c
.RI "\fBpasswd\fP"
.br
.ti -1c
.RI "\fBconn\fP"
.br
.ti -1c
.RI "\fBcurs\fP"
.br
.in -1c
.SH "Descrição detalhada"
.PP 
Classe de conexão e acesso ao banco de dados\&. 
.PP
Definido na linha 6 do ficheiro instalar\&.py\&.
.SH "Documentação dos Construtores & Destrutor"
.PP 
.SS "def \fBinstalar\&.Connect_MySQL\&.__init__\fP (self, host, user, passwd)"
.PP
Inicializa o banco de dados\&. \fBParâmetros:\fP
.RS 4
\fIhost\fP Servidor do banco de dados 
.br
\fIuser\fP Usuario do banco de dados 
.br
\fIpasswd\fP Senha do banco de dados 
.RE
.PP

.PP
Definido na linha 11 do ficheiro instalar\&.py\&.
.PP
.nf
11 
12     def __init__(self,host,user,passwd):
13 
14         self\&.host=host
15         self\&.user=user
16         self\&.passwd=passwd
17         self\&.conecta()
    
.fi
.SH "Documentação dos métodos"
.PP 
.SS "def \fBinstalar\&.Connect_MySQL\&.conecta\fP (self)"
.PP
Definido na linha 18 do ficheiro instalar\&.py\&.
.PP
.nf
18 
19     def conecta(self):
20         self\&.conn = Connect(self\&.host, self\&.user, self\&.passwd,charset='utf8',use_unicode=True)
21         self\&.curs = self\&.conn\&.cursor()
22         self\&.curs\&.execute('CREATE DATABASE IF NOT EXISTS controledeacesso')
23         self\&.curs\&.execute('USE controledeacesso')

.fi
.SS "def \fBinstalar\&.Connect_MySQL\&.criar_Configuracoes\fP (self, config, dado)"
.PP
Cria as configurações do programa\&. \fBParâmetros:\fP
.RS 4
\fIconfig\fP Nome da configuração 
.br
\fIdado\fP Dado que vai ser inserido 
.RE
.PP

.PP
Definido na linha 44 do ficheiro instalar\&.py\&.
.PP
.nf
44 
45     def criar_Configuracoes(self,config,dado):
46         sql='INSERT INTO configuracoes (tipo,dado) VALUES (%s,%s)'
47         self\&.curs\&.execute(sql,(config,dado))
48         self\&.conn\&.commit()

.fi
.SS "def \fBinstalar\&.Connect_MySQL\&.criar_Tabelas\fP (self)"
.PP
Cria as tabelas do programa na instalação\&. 
.PP
Definido na linha 34 do ficheiro instalar\&.py\&.
.PP
.nf
34 
35     def criar_Tabelas(self):
36         self\&.curs\&.execute('CREATE TABLE IF NOT EXISTS funcionarios (id_funcionario INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nome VARCHAR(100), matricula VARCHAR(40) NOT NULL, rfid VARCHAR(20), ativo BOOLEAN NOT NULL)')
37         self\&.curs\&.execute('CREATE TABLE IF NOT EXISTS horarios (id_horario INT NOT NULL AUTO_INCREMENT PRIMARY KEY, id_funcionario INT NOT NULL, dia_da_semana INT NOT NULL, hora_inicial TIME NOT NULL, hora_final TIME NOT NULL)')
38         self\&.curs\&.execute('CREATE TABLE IF NOT EXISTS pontos (id_ponto INT NOT NULL AUTO_INCREMENT PRIMARY KEY, id_funcionario INT NOT NULL, id_horario INT NOT NULL, horario_entrada DATETIME NOT NULL, horario_saida DATETIME, presenca INT)')
39         self\&.curs\&.execute('CREATE TABLE IF NOT EXISTS log_porta (id_log INT NOT NULL AUTO_INCREMENT PRIMARY KEY, id_funcionario INT NOT NULL, horario_entrada DATETIME NOT NULL)')
40         self\&.curs\&.execute('CREATE TABLE IF NOT EXISTS configuracoes (id_config INT NOT NULL AUTO_INCREMENT PRIMARY KEY, tipo VARCHAR(100) NOT NULL, dado VARCHAR(100) NOT NULL)')

.fi
.SS "def \fBinstalar\&.Connect_MySQL\&.dropar_Tabelas\fP (self)"
.PP
Deleta todas as tabelas se existirem\&. 
.PP
Definido na linha 25 do ficheiro instalar\&.py\&.
.PP
.nf
25 
26     def dropar_Tabelas(self):
27         self\&.curs\&.execute('DROP TABLE IF EXISTS funcionarios')
28         self\&.curs\&.execute('DROP TABLE IF EXISTS horarios')
29         self\&.curs\&.execute('DROP TABLE IF EXISTS pontos')
30         self\&.curs\&.execute('DROP TABLE IF EXISTS log_porta')
31         self\&.curs\&.execute('DROP TABLE IF EXISTS configuracoes')
32 
    
.fi
.SH "Documentação dos dados membro"
.PP 
.SS "\fBinstalar\&.Connect_MySQL::conn\fP"
.PP
Definido na linha 18 do ficheiro instalar\&.py\&.
.SS "\fBinstalar\&.Connect_MySQL::curs\fP"
.PP
Definido na linha 18 do ficheiro instalar\&.py\&.
.SS "\fBinstalar\&.Connect_MySQL::host\fP"
.PP
Definido na linha 11 do ficheiro instalar\&.py\&.
.SS "\fBinstalar\&.Connect_MySQL::passwd\fP"
.PP
Definido na linha 11 do ficheiro instalar\&.py\&.
.SS "\fBinstalar\&.Connect_MySQL::user\fP"
.PP
Definido na linha 11 do ficheiro instalar\&.py\&.

.SH "Autor"
.PP 
Gerado automaticamente por Doxygen para Controle de Acesso a partir do código fonte\&.
